hibernate关系映射
* 单向关联
** 一对一
*** 外键
**** 模型
 + 一个人对应一个地址
**** 实体类定义
 + public class Person11fk {
   private int personid;
   private String name;
   private int age;
   private Address11fk address11fk;
   }
 + public class Address11fk {
   private int addressid;
   private String addressdetail;
}
+ 说明
  一个类作为另一个类的属性
**** 表模型
mysql> desc address_11fk;
+---------------+--------------+------+-----+---------+----------------+
| Field         | Type         | Null | Key | Default | Extra          |
+---------------+--------------+------+-----+---------+----------------+
| addressid     | int(11)      | NO   | PRI | NULL    | auto_increment |
| addressdetail | varchar(255) | YES  |     | NULL    |                |
+---------------+--------------+------+-----+---------+----------------+
 
mysql> desc person_11fk;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| personid  | int(11)      | NO   | PRI | NULL    | auto_increment |
| name      | varchar(255) | YES  |     | NULL    |                |
| age       | int(11)      | YES  |     | NULL    |                |
| addressId | int(11)      | YES  | UNI | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
+ 说明
  一个表中的主键在另一个表中
**** SQL脚本
 + CREATE TABLE `address_11fk` ( 
   `addressid` int(11) NOT NULL auto_increment, 
   `addressdetail` varchar(255) default NULL, 
   PRIMARY KEY    (`addressid`) 
   ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=gbk; 
   
  + CREATE TABLE `person_11fk` ( 
    `personid` int(11) NOT NULL auto_increment, 
    `name` varchar(255) default NULL, 
    `age` int(11) default NULL, 
    `addressId` int(11) default NULL, 
    PRIMARY KEY    (`personid`), 
    KEY `FK68A8818F3F45AA77` (`addressId`), 
    CONSTRAINT `FK68A8818F3F45AA77` FOREIGN KEY (`addressId`) REFERENCES `address_11fk` (`addressid`) 
    ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=gbk; 
**** 映射方法
+ <hibernate-mapping> 
        <class name="com.lavasoft.dx._1_1_fk.Address11fk" table="ADDRESS_11fk"> 
                <id name="addressid"> 
                        <generator class="identity"/> 
                </id> 
                <property name="addressdetail"/> 
        </class> 
</hibernate-mapping>
 
+ <hibernate-mapping> 
        <class name="com.lavasoft.dx._1_1_fk.Person11fk" table="PERSON_11fk"> 
                <id name="personid"> 
                        <generator class="identity"/> 
                </id> 
                <property name="name"/> 
                <property name="age"/> 
                <!--用来映射关联PO column是Address在该表中的外键列名,增加unique变成“1-1”--> 
                <many-to-one name="address11fk" column="addressId" unique="true"/> 
        </class> 
</hibernate-mapping>
**** 测试方法
public class Test_11fk { 
        public static void main(String[] args){ 
                Person11fk p1=new Person11fk(); 
    
                p1.setAge(21); 
                p1.setName("p1"); 
    
                Address11fk add1=new Address11fk(); 
                add1.setAddressdetail("郑州市经三路"); 
    
                p1.setAddress11fk(add1); 
    
                Session session= HibernateUtil.getCurrentSession(); 
                Transaction tx=session.beginTransaction(); 
                session.save(add1); 
                session.save(p1); 
                tx.commit(); 
                HibernateUtil.closeSession(); 
        } 
}
*** 主键
*** 连接表
** 一对多
*** 外键
*** 连接表
** 多对一
*** 外键
*** 连接表
** 多对多
* 双向关联
** 一对一
*** 外键
*** 主键
*** 连接表
** 一对多
*** 外键
*** 连接表
** 多对多
