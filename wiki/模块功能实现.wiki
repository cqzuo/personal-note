%toc
= 功能模块分析 =
== 部门管理 ==
 # 链接:http://localhost:8080/DECG/org/OrgAction.action
 # OrgAction
 {{{class="brush: java"
package com.decg.organization.action;

import javax.annotation.Resource;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.decg.baseaction.BaseAction;
import com.decg.organization.OrgSupport;
import com.decg.organization.Organization;
import com.decg.organization.service.OrgService;
import com.opensymphony.xwork2.ActionContext;

@Controller
@Scope("prototype")
public class OrgAction extends BaseAction {

	@Resource(name = "orgServiceBean")
	private OrgService orgService;

	private Organization organization;
	private OrgSupport orgSupport = new OrgSupport();
	
	/**
	 * 机构列表
	 */
	public String execute() {
		if(!this.isLogin()) {
			return this.checkResult();
		}
		String result = "orgList_success";
		if(this.orgSupport.getSelect()) {
			result = "selectOrgList_success";
		}
		ActionContext.getContext().put("orgList", orgService.orgList(this.orgSupport.getParentId()));
		return result;
	}
	
	/**
	 * 添加机构界面
	 */
	public String addOrgUI() {
		if(!this.isLogin()) {
			return this.checkResult();
		}
		return "addOrgUI_success";
	}
	
	/**
	 * 添加机构
	 */
	public String addOrg() {
		if(!this.isLogin()) {
			return this.checkResult();
		}
		orgService.addOrg(this.organization, this.orgSupport.getParentId());
		return "goOrgList_success";
	}
	
	/**
	 * 机构详情
	 */
	public String goOrgDetail() {
		if(!this.isLogin()) {
			return this.checkResult();
		}
		ActionContext.getContext().put("orgEntity", orgService.find(Organization.class, this.organization.getId()));
		return "goOrgDetail_success";
	}
	
	/**
	 * 更新机构
	 */
	public String updateOrg() {
		if(!this.isLogin()) {
			return this.checkResult();
		}
		orgService.updateOrg(this.organization, this.orgSupport.getParentId());
		return "goOrgList_success";
	}
	
	/**
	 * 删除机构.如果含有子机构则级联删除
	 */
	public String deleteOrg() {
		if(!this.isLogin()) {
			return this.checkResult();
		}
		orgService.delete(Organization.class, this.organization.getId());
		return "goOrgList_success";
	}

	public Organization getOrganization() {
		return organization;
	}

	public void setOrganization(Organization organization) {
		this.organization = organization;
	}

	public OrgSupport getOrgSupport() {
		return orgSupport;
	}

	public void setOrgSupport(OrgSupport orgSupport) {
		this.orgSupport = orgSupport;
	}
}
 }}}
 # 注
  - Action都继承自BaseAction
  - 判断用户登录和返回页面的信息
 {{{class="brush: java"
package com.decg.baseaction;

import com.decg.user.User;
import com.opensymphony.xwork2.ActionContext;


public class BaseAction {
	
	/**
	 * 用户是否登录
	 * @return	boolean true为已登录，false为未登录
	 */
	public boolean isLogin() {
		boolean flag = false;
		User u = (User)ActionContext.getContext().getSession().get("user");
		if(u != null) {
			flag = true;
		}
		return flag;
	}
	
	/**
	 * 返回的结果页面和信息
	 */
	public String checkResult() {
		ActionContext.getContext().put("message", "您还没有登录,不能执行该操作.");
		return "message";
	}
	
}
  }}}
