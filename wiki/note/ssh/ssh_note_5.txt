5 回复功能
  5.1 用户登录后的页面index.jsp
  5.1.1 index.jsp功能设计
  必须展示 栏目，推荐的问题，已解决的问题，待解决的问题
  <body>
    <center>
    //导入网页模版文件
      <jsp:include flush="true" page="../inc/template.jsp">
	         <jsp:param name="url" value="../" />
      </jsp:include> 
      //判断是否登录成功,如果是则显示个人信息及问题信息
      <logic:present name="userid" scope="session">
	欢迎${userid}光临&nbsp;
	//用户登陆成功后会在session的Attribute中存放各种对象,比如grade userid等
	头衔：<%=IntegralGrade.getInstance().getGradeInfo((Integer) session.getAttribute("grade"))%>&nbsp;
	<a href="user/index.htm">个人中心</a>
      </logic:present>
      <table border="1" width="100%">
	<tr>
	  <td rowspan="4">
	    <logic:present name="allitem" scope="request">
	      <logic:iterate id="item" name="allitem" scope="request">
		<h3><a href="show.do?itemid=${item.itemid}&status=selectitem">${item.itemname}</a></h3>
		<logic:iterate id="sub" name="item" property="subitems">
		  <h4>&nbsp;&nbsp;
		  <a  href="show.do?itemid=${item.itemid}&subid=${sub.subid}&status=selectsub">${sub.subname}</a></h4>
		</logic:iterate>
	      </logic:iterate>
	  </logic:present></td>
	</tr>
	<tr>
	  <td><logic:present name="allcommen" scope="request">
	    <table border="0" width="80%">
	      <tr>
		<td>
		  <h3>推荐的问题&nbsp;<a href="show.do?status=selectcommen&commen=1">更多</a></h3>
		</td>
	      </tr>
	      <logic:iterate id="ques" name="allcommen" scope="request">
		<tr>
		  <td><a href="show.do?qid=${ques.qid}&status=selectid">${ques.title}</a>
		  </td>
		</tr>
	      </logic:iterate>
	    </table>
	  </logic:present></td>
	</tr>
	<tr>
	  <td><logic:present name="status1" scope="request">
	    <table border="0" width="80%">
	      <tr>
		<td>
		  <h3>待解决问题&nbsp;<a href="show.do?status=selectstatus&sta=2">更多</a></h3>
		</td>
	      </tr>
	      <logic:iterate id="ques" name="status1" scope="request">
	      <tr>
		<td><a href="show.do?qid=${ques.qid}&status=selectid">${ques.title}</a>
		</td>
	      </tr>
	    </logic:iterate>
	    </table>
	  </logic:present></td>
	</tr>
	<tr>
	  <td><logic:present name="status2" scope="request">
	    <table border="0" width="80%">
	      <tr>
		<td>
		  <h3>已解决问题&nbsp;<a href="show.do?status=selectstatus&sta=1">更多</a></h3>
		</td>
	      </tr>
	      <logic:iterate id="ques" name="status2" scope="request">
		<tr>
		  <td><a href="show.do?qid=${ques.qid}&status=selectid">${ques.title}</a>
		  </td>
		</tr>
	      </logic:iterate>
	    </table>
	  </logic:present></td>
	</tr>
      </table>
    </center>
  </body>
</html:html>
 5.2 单独建立首页的Action来实现数据的的读取显示
    5.2.1建立一个indexForm(动态FormBean)
    Action继承自DispatchAction,参数为status
        5.2.1.1 修改IndexAction.java
/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.lxh.myzngt.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.DynaActionForm;
import org.apache.struts.actions.DispatchAction;
import org.lxh.myzngt.dao.IItemDAO;
import org.lxh.myzngt.dao.IQuestionDAO;

/**
 * MyEclipse Struts Creation date: 07-02-2007
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/index" name="indexForm" input="/form/index.jsp"
 *                parameter="status" scope="request" validate="true"
 */
public class IndexAction extends DispatchAction {
	// 需要取栏目和各种问题
	private IItemDAO iitemdao;

	private IQuestionDAO iquestiondao;

	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DynaActionForm indexForm = (DynaActionForm) form;
		// 查询信息
		List allitem = null ;
		List allcommen = null ;
		List status1 = null ;
		List status2 = null ;
		try {
			allitem = this.iitemdao.queryAll() ;
			allcommen = this.iquestiondao.queryByCommemflag(1, 1, 2) ;
			//按照状态来进行查询
			status1 = this.iquestiondao.queryByStatus(1, 1, 8) ;
			status2 = this.iquestiondao.queryByStatus(2, 1, 8) ;
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		request.setAttribute("allitem", allitem) ;
		request.setAttribute("allcommen", allcommen) ;
		request.setAttribute("status1", status1) ;
		request.setAttribute("status2", status2) ;
		return mapping.findForward("indexdo");
	}

	public IItemDAO getIitemdao() {
		return iitemdao;
	}

	public void setIitemdao(IItemDAO iitemdao) {
		this.iitemdao = iitemdao;
	}

	public IQuestionDAO getIquestiondao() {
		return iquestiondao;
	}

	public void setIquestiondao(IQuestionDAO iquestiondao) {
		this.iquestiondao = iquestiondao;
	}
}
//hibernate中查询的分页
		q.setFirstResult((currentPage - 1) * lineSize);
		q.setMaxResults(lineSize);
5.1.3 将Action注入到application中
	<bean name="/jsp/index"
		class="org.lxh.myzngt.struts.action.IndexAction">
		<property name="iitemdao">
			<ref bean="iitemdaoimpl" />
		</property>
		<property name="iquestiondao">
			<ref bean="iquestiondaoimpl" />
		</property>
	</bean>
   5.1.4 实现查询结果在页面上的显示个数及显示顺序
    5.1.4.1 修改IndexAction
    allitem = this.iitemdao.queryAll() ;
    allcommen = this.iquestiondao.queryByCommemflag(1, 1, 2) ;
    //按照状态来进行查询
status1 = this.iquestiondao.queryByStatus(1, 1, 8) ;//1 表示查询还未回答过的问题, 1 表示从第1页开始,8 表示每页显示8个数据项
status2 = this.iquestiondao.queryByStatus(2, 1, 8) ;//2 表示问题的状态
    5.1.4.2 修改IQuestionDAOImpl.java
	String hql = "FROM Question AS q WHERE q.commenflag=? ORDER BY q.questiontime desc";
  5.1.5 在indes.jsp中显示栏目信息
  <tr>
    <logic:present name="status1" scope="request">
      <table border="0" width="80%">
	<tr>
	  <td>
	    <h3>待解决问题&nbsp;<a href="show.do?status=selectstatus&sta=2">更多</a></h3>
	  </td>
	</tr>
	<logic:iterate id="ques" name="status1" scope="request">
	  <tr>
	    <td><a href="show.do?qid=${ques.qid}&status=selectid">${ques.title}</a>
	    </td>
	  </tr>
	</logic:iterate>
      </table>
  </logic:present></td>
</tr>

<tr>
  <td>
    <logic:present name="status2" scope="request">
      <table border="0" width="80%">
	<tr>
	  <td>
	    <h3>已解决问题&nbsp;<a href="show.do?status=selectstatus&sta=1">更多</a></h3>
	  </td>
	</tr>
	<logic:iterate id="ques" name="status2" scope="request">
	  <tr>
	    <td><a href="show.do?qid=${ques.qid}&status=selectid">${ques.title}</a>
	    </td>
	  </tr>
	</logic:iterate>
      </table>
    </logic:present>
  </td>
</tr>
5.1.6 重新设置登陆注册成功后的转向页
   5.1.6.1 根目录下index.htm修改
   <META HTTP-EQUIV="refresh" CONTENT="0;URL=jsp/index.do?status=list">
   5.1.6.2 struts-config.xml修改
   <action attribute="userForm" input="/jsp/errors.jsp"
	   name="userForm" parameter="status" path="/jsp/user" scope="request"
	   type="org.lxh.myzngt.struts.action.UserAction">
     <forward name="registersuccess"
	      path="/jsp/index.do?status=list">
     </forward>
     <forward name="registerfailure" path="/jsp/register.jsp"></forward>
     <forward name="loginsuccess"
	      path="/jsp/index.do?status=list">
     </forward>
     <forward name="loginfailure" path="/jsp/login.jsp"></forward>
     <forward name="exists" path="/jsp/updatepwd.jsp"></forward>
     <forward name="notexists" path="/jsp/forgetpwd.jsp"></forward>
     <forward name="updatepwddo" path="/jsp/updatepwd_do.jsp"></forward>
     <forward name="userinfo" path="/jsp/user/userinfo.jsp"></forward>
     <forward name="updatedo" path="/jsp/user/update_do.jsp"></forward>
   </action>										     