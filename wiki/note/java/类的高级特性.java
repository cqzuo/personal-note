掌握类的静态成员
掌握final关键字用法 
掌握抽象类的定义和用法
掌握接口的定义和用法
掌握高级访问控制
了解内部类的概念

1.类的静态成员
	类中的静态变量、方法或代码块属于类，而不属于某个特定的对象。 
  类的静态成员可以与类的名称一起使用，而无需创建类的对象。 
  静态变量或方法也称为类的变量或方法。
  引用静态变量的方法：通过引用类的任意实例或类的名称；
    class StaticDemo
    {
      static int x = 0;
      StaticDemo(){x++;}
    }
    StaticDemo d1 = new StaticDemo();
    StaticDemo d2 = new StaticDemo();
    d1.x=100;
    d2.x=200;
    testVariable = d1.x;//testVariable =StaticDemo.x;
静态方法的要点：
   类的静态方法只能访问其他的静态成员
   静态方法没有this;
   静态方法不能覆盖为非静态方法
静态块要点：
   如果需要通过计算来初始化静态变量，可以声明一个静态块。
  静态块仅在该类被加载时执行一次。
  只能初始化类的静态数据成员。
2.final关键字
  final 修饰符可应用于类、方法和变量。
  final 在应用于类、方法和变量时意义是不同的，但本质是一样的：final表示不可改变。 
  声明为final的类不能被继承
 final方法
   在方法声明中使用 final 关键字向编译器表明子类不能覆盖此方法。
   在声明类中，一个 final 方法只被实现一次。
  如果一个类为 final 类，那么它的所有方法都为隐式的 final 方法