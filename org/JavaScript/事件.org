* 事件简介
** 特点
 - 事件是DOM的一部分
 - 时间在DOM Level3中规定
 - ie是唯一一个对DOM事件模型缺少良好支持的主流浏览器
* 事件流
 - 事件发生顺序是IE和其他浏览器在事件支持上的主要差别
** 冒泡型事件
*** 特点
 - ie6在html中也能接收到冒泡
 - firefox在windows窗口中也能收到对象
** 捕获型事件
*** 特点
 - firefox实现的方案与冒泡型相反
** DOM事件流
*** 特点
 - DOM同时支持2种事件模型
 - 文本节点也会触发事件(ie不会)
* 事件处理函数
** 概念
 - 事件处理函数(事件监听函数)
  + 响应某个事件而调用的函数 
** 要点
 - xhtml代码中,事件处理函数都必须小写
 - 事件处理函数大小写任意
** ie
*** 特点
 - 每个元素和window对象有两个方法
  + attachEvent() -- 给事件绑定一个处理函数
  + detachEvent() -- 给事件解除绑定的函数
 - 例子 
 #+BEGIN_SRC javaScript
 var cliEle = document.getElementById("clickme");
	cliEle.attachEvent("onclick",test);
	att
	function test(){
		log.debug("刚才谁点我了!!");
	}
#+END_SRC
** dom
*** 特点
 - 事件分配或移除
  * addEventListener()
  * removeEventListener()
 - 参数
  * 事件名称
  * 要分配的函数
  * 处理函数阶段(false冒泡/true捕获)
 - 可附加多个事件处理函数
 - 处理函数的阶段必须匹配,否则无效
 - 与传统直接赋值的区别
  * 功能相同
  * 后续对事件的处理函数清除前面的赋值
*** 例子
 #+BEGIN_SRC javaScript
  var fnclick = function(){
    alert("I'm clicked!");
  }
  var oDiv = document.getElementById("div1");
  oDiv.addEventListener("click",fnclick,false);
  //do some other stuff hrere
  oDiv.removeEventListener("click",fnclick,false);
  //hander
#+END_SRC 
* 事件对象
** 包含内容
 - 引起事件的对象
 - 事件发生时鼠标的信息
 - 事件发生时键盘的信息
** 定位
 - 
** 属性/方法
