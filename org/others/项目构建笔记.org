* 配置文件
** web.xml 配置
*** log4j 日志配置
  #+BEGIN_SRC xml
    <!-- log4j 配置  开始 -->
      <context-param>
          <param-name>log4jConfigLocation</param-name>
          <param-value>/WEB-INF/classes/log4j.properties</param-value>
      </context-param>
      <context-param>
          <param-name>log4jRefreshInterval</param-name>
          <param-value>600000</param-value>
      </context-param>
      <context-param>
          <param-name>webAppRootKey</param-name>
          <param-value>javass.webapp.root</param-value>
      </context-param>
      <listener>
          <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
      </listener>
      <!-- log4j 配置  结束 -->
   #+END_SRC
*** servlet 的编码
  #+BEGIN_SRC xml
      <!-- 设置servlet编码开始 -->
	<filter>
	    <filter-name>Set Character Encoding</filter-name>
	    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	    <init-param>
		<param-name>encoding</param-name>
		<param-value>UTF-8</param-value>
	    </init-param>
	    <init-param>
		<param-name>forceEncoding</param-name>
		<param-value>true</param-value>
	    </init-param>
	</filter>

	<filter-mapping>
	    <filter-name>Set Character Encoding</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 设置servlet编码结束 -->
      #+END_SRC
***  自定义的拦截器
  #+BEGIN_SRC xml
       	     <!-- 设置BackURL开始 -->    
       	   <filter>
               <filter-name>BackURLFilter</filter-name>
               <filter-class>cn.javass.common.web.filter.BackURLFilter</filter-class>
       	   </filter>

       	   <filter-mapping>
               <filter-name>BackURLFilter</filter-name>
               <url-pattern>/*</url-pattern>
       	   </filter-mapping>
       	   <!-- 设置BackURL结束 --> 
    #+END_SRC
*** spring 的配置文件
  #+BEGIN_SRC xml
       	  <!-- Spring配置文件开始  -->    
       	     <context-param>
               	 <param-name>contextConfigLocation</param-name>
               	 <param-value>
               	     classpath:spring-config.xml
               	 </param-value>
       	     </context-param>
    #+END_SRC
*** sping-mvc的配置
  #+BEGIN_SRC xml
       	      <listener>
               	   <listener-class>
               	       org.springframework.web.context.ContextLoaderListener
               	   </listener-class>
       	       </listener>
       	       <!-- Spring配置文件结束 -->
    #+END_SRC
*** 隐藏http方法的监听器
  #+BEGIN_SRC xml
		  <filter>
		     <filter-name>HiddenHttpMethodFilter</filter-name>
		     <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
		 </filter>
		 <filter-mapping>
		     <filter-name>HiddenHttpMethodFilter</filter-name>
		     <servlet-name>spring</servlet-name>
		 </filter-mapping>
   #+END_SRC
*** spring 的注册
 #+BEGIN_SRC xml
 <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
 #+END_SRC

** 数据库的配置
*** 用 properties 文件来配置数据库相关信息
*** hibernate配置相关
 #+BEGIN_SRC proerties
 hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
hibernate.hbm2ddl.auto=none
hibernate.show_sql=false
hibernate.query.substitutions=true 1, false 0
hibernate.default_batch_fetch_size=16
hibernate.max_fetch_depth=2
hibernate.bytecode.use_reflection_optimizer=true
hibernate.cache.use_second_level_cache=true
hibernate.cache.use_query_cache=true
hibernate.cache.region.factory_class=org.hibernate.cache.EhCacheRegionFactory
net.sf.ehcache.configurationResourceName=/ehcache_hibernate.xml
hibernate.cache.use_structured_entries=true
hibernate.generate_statistics=true
 #+END_SRC
*** 数据库连接配置
 #+BEGIN_SRC proerties
 connection.driver_class=com.mysql.jdbc.Driver
connection.url=jdbc:mysql://localhost:3306/javassdb?useUnicode=true&amp;characterEncoding=UTF-8
connection.username=DECG
connection.password=DECG
 #+END_SRC
*** 连接池配置
 #+BEGIN_SRC proerties
 proxool.maximum.connection.count=40
proxool.minimum.connection.count=5
proxool.statistics=1m,15m,1h,1d
proxool.simultaneous.build.throttle=30
 #+END_SRC
** 日志配置
*** 命令行中的日志配置
 #+BEGIN_SRC proerties
 #console log
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
 # 输出的时间格式
log4j.appender.CONSOLE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%t] %-5p %c - %m%n
 #+END_SRC    
*** 将日志输出到文件中
 #+BEGIN_SRC proerties
 #all log
log4j.appender.DAILY_ALL=org.apache.log4j.DailyRollingFileAppender
log4j.appender.DAILY_ALL.layout=org.apache.log4j.PatternLayout
log4j.appender.DAILY_ALL.layout.ConversionPattern="%p %d{yyyy-MM-dd HH:mm:ss} %-50.50c(%L) - %m%n
log4j.appender.DAILY_ALL.File=D:/Backup/javass-all.log
 #+END_SRC
*** 日志输出的级别
 #+BEGIN_SRC proerties
 log4j.rootLogger=INFO,CONSOLE
 #+END_SRC
** spring的基本配置
** spring-mvc配置
